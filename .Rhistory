View(value1)
# world_spdf@data$POP2005[ which(world_spdf@data$POP2005 == 0)] = NA
# world_spdf@data$POP2005 <- as.numeric(as.character(world_spdf@data$POP2005)) / 1000000 %>% round(2)
value1 <- world_spdf@data
View(value1)
for (rowi in 1:nrow(countrySummaryDF)) {
for (rowj in 1:n_distinct(world_spdf@data$NAME))
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == "EIRE")
{
if(as.character(world_spdf@data[rowj, "NAME"]) == "Ireland")
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
}
else
{
value1[rowj, "value"] = 1
}
}
else
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == as.character(world_spdf@data[rowj, "NAME"]))
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
}
else
{
value1[rowj, "value"] = 1
}
}
}
}
View(value1)
nrow(countrySummaryDF)
for (rowi in 1:nrow(countrySummaryDF)) {
for (rowj in 1:n_distinct(world_spdf@data$NAME))
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == "EIRE")
{
if(as.character(world_spdf@data[rowj, "NAME"]) == "Ireland")
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
}
else
{
value1[rowj, "value"] = rowi
}
}
else
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == as.character(world_spdf@data[rowj, "NAME"]))
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
}
else
{
value1[rowj, "value"] = rowi
}
}
}
}
n_distinct(world_spdf@data$NAME)
value1 <- world_spdf@data
for (rowi in 1:nrow(countrySummaryDF)) {
for (rowj in 1:n_distinct(world_spdf@data$NAME))
{
# if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == "EIRE")
# {
#   if(as.character(world_spdf@data[rowj, "NAME"]) == "Ireland")
#   {
#     value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
#   }
#   else
#   {
#     value1[rowj, "value"] = rowi
#   }
#
# }
# else
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == as.character(world_spdf@data[rowj, "NAME"]))
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
}
else
{
value1[rowj, "value"] = rowi
}
}
}
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
value1 <- world_spdf@data
for (rowi in 1:nrow(countrySummaryDF)) {
for (rowj in 1:n_distinct(world_spdf@data$NAME))
{
# if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == "EIRE")
# {
#   if(as.character(world_spdf@data[rowj, "NAME"]) == "Ireland")
#   {
#     value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
#   }
#   else
#   {
#     value1[rowj, "value"] = rowi
#   }
#
# }
# else
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == as.character(world_spdf@data[rowj, "NAME"]))
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
break()
}
else
{
value1[rowj, "value"] = rowi
break()
}
}
}
}
value1 <- world_spdf@data
for (rowi in 1:nrow(countrySummaryDF)) {
for (rowj in 1:n_distinct(world_spdf@data$NAME))
{
# if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == "EIRE")
# {
#   if(as.character(world_spdf@data[rowj, "NAME"]) == "Ireland")
#   {
#     value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
#   }
#   else
#   {
#     value1[rowj, "value"] = rowi
#   }
#
# }
# else
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == as.character(world_spdf@data[rowj, "NAME"]))
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
}
else
{
value1[rowj, "value"] = rowi
}
}
}
}
value1 <- world_spdf@data
for (rowi in 1:nrow(countrySummaryDF)) {
for (rowj in 1:n_distinct(world_spdf@data$NAME))
{
# if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == "EIRE")
# {
#   if(as.character(world_spdf@data[rowj, "NAME"]) == "Ireland")
#   {
#     value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
#   }
#   else
#   {
#     value1[rowj, "value"] = rowi
#   }
#
# }
# else
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == as.character(world_spdf@data[rowj, "NAME"]))
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
break()
}
else
{
value1[rowj, "value"] = rowi
}
}
}
}
value1 <- world_spdf@data
for (rowi in 1:nrow(countrySummaryDF)) {
for (rowj in 1:n_distinct(world_spdf@data$NAME))
{
# if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == "EIRE")
# {
#   if(as.character(world_spdf@data[rowj, "NAME"]) == "Ireland")
#   {
#     value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
#   }
#   else
#   {
#     value1[rowj, "value"] = rowi
#   }
#
# }
# else
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == as.character(world_spdf@data[rowj, "NAME"]))
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
break()
}
else
{
value1[rowj, "value"] = rowi
}
}
}
break()
}
value1 <- world_spdf@data
for (rowi in 1:nrow(countrySummaryDF)) {
for (rowj in 1:n_distinct(world_spdf@data$NAME))
{
# if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == "EIRE")
# {
#   if(as.character(world_spdf@data[rowj, "NAME"]) == "Ireland")
#   {
#     value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
#   }
#   else
#   {
#     value1[rowj, "value"] = rowi
#   }
#
# }
# else
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == as.character(world_spdf@data[rowj, "NAME"]))
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
break()
}
# else
# {
#   value1[rowj, "value"] = rowi
# }
}
}
break()
}
value1 <- world_spdf@data
for (rowi in 1:nrow(countrySummaryDF)) {
for (rowj in 1:n_distinct(world_spdf@data$NAME))
{
# if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == "EIRE")
# {
#   if(as.character(world_spdf@data[rowj, "NAME"]) == "Ireland")
#   {
#     value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
#   }
#   else
#   {
#     value1[rowj, "value"] = rowi
#   }
#
# }
# else
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == as.character(world_spdf@data[rowj, "NAME"]))
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
break()
}
# else
# {
#   value1[rowj, "value"] = rowi
# }
}
}
}
value1 <- world_spdf@data
for (rowi in 1:nrow(countrySummaryDF)) {
for (rowj in 1:n_distinct(world_spdf@data$NAME))
{
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == as.character(world_spdf@data[rowj, "NAME"]))
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
break()
}
}
}
}
value1 <- world_spdf@data
for (rowi in 1:nrow(countrySummaryDF)) {
for (rowj in 1:n_distinct(world_spdf@data$NAME))
{
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == as.character(world_spdf@data[rowj, "NAME"]))
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
break()
}
else
{
value1[rowj, "value"] = 0
}
}
}
}
value1 <- world_spdf@data
for (rowi in 1:nrow(countrySummaryDF)) {
for (rowj in 1:n_distinct(world_spdf@data$NAME))
{
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == as.character(world_spdf@data[rowj, "NAME"]))
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
break()
}
}
}
}
install.packages("leaflet")
library("leaflet", lib.loc="~/R/win-library/3.4")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
value1 <- world_spdf@data
for (rowi in 1:nrow(countrySummaryDF)) {
for (rowj in 1:n_distinct(world_spdf@data$NAME))
{
{
if(as.character(unlist(countrySummaryDF[rowi, "Country"])) == as.character(world_spdf@data[rowj, "NAME"]))
{
value1[rowj, "value"] = as.numeric(countrySummaryDF[rowi, "revenue"])
break()
}
}
}
}
valuerev=as.numeric(as.character(value1$value))
glimpse(valuerev)
View(valuerev)
glimpse(value1)
runApp()
valuerev<-as.numeric(as.character(value1$value))
View(valuerev)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Q
runApp()
runApp()
runApp()
runApp()
runApp()
Q
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("https://install-github.me/mangothecat/shinytoastr")
shiny::runApp()
library("shinycssloaders", lib.loc="~/R/win-library/3.4")
library("plotly", lib.loc="~/R/win-library/3.4")
library("leaflet", lib.loc="~/R/win-library/3.4")
runApp()
runApp()
install.packages("readOGR")
library("rgdal", lib.loc="~/R/win-library/3.4")
runApp()
runApp()
install.packages("shinythemes")
library("rgdal", lib.loc="~/R/win-library/3.4")
runApp()
library("shinycssloaders", lib.loc="~/R/win-library/3.4")
library("shinythemes", lib.loc="~/R/win-library/3.4")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('E:/Hamza/CodeProjects/R/epractice.R', encoding = 'UTF-8', echo=TRUE)
View(custData)
runApp()
runApp()
shiny::runApp()
library("shinycssloaders", lib.loc="~/R/win-library/3.4")
library("plotly", lib.loc="~/R/win-library/3.4")
library("httr", lib.loc="~/R/win-library/3.4")
library("leaflet", lib.loc="~/R/win-library/3.4")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("font-awesome")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library("magrittr", lib.loc="~/R/win-library/3.4")
library("httr", lib.loc="~/R/win-library/3.4")
library("leaflet", lib.loc="~/R/win-library/3.4")
library("plotly", lib.loc="~/R/win-library/3.4")
library("rgdal", lib.loc="~/R/win-library/3.4")
library("shinycssloaders", lib.loc="~/R/win-library/3.4")
runApp()
runApp()
library("shinycssloaders", lib.loc="~/R/win-library/3.4")
library("shiny", lib.loc="~/R/win-library/3.4")
library("plotly", lib.loc="~/R/win-library/3.4")
library("rgdal", lib.loc="~/R/win-library/3.4")
library("leaflet", lib.loc="~/R/win-library/3.4")
runApp()
runApp()
runApp()
runApp()
runApp()
library("leaflet", lib.loc="~/R/win-library/3.4")
library("shinycssloaders", lib.loc="~/R/win-library/3.4")
library("plotly", lib.loc="~/R/win-library/3.4")
library("rgdal", lib.loc="~/R/win-library/3.4")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('E:/Hamza/CodeProjects/R/epractice.R', encoding = 'UTF-8', echo=TRUE)
View(custSummaryDF)
View(p)
View(productData)
View(productFiltered)
View(custSummaryDF)
View(custSummaryB)
View(customerPerCountryDF)
source('E:/Hamza/CodeProjects/R/epractice.R', encoding = 'UTF-8', echo=TRUE)
View(customerBreakdown11)
View(customerBreakdown)
runApp()
runApp()
runApp()
